scale_y_continuous(limits=c((min_p1), (max_p1))) +
theme(text = element_text(size=10), legend.position="none")
# Summary plot of all treatments ==================================================================================== #
# All.Treatment mean sd plot
min_p4 <- min(meanEXp_Summary.All.Treatment$mean) - max(meanEXp_Summary.All.Treatment$se)
Metadata_D1
# mean Exp response table
meanEXp_Mod <- merged_Expdata_Mod %>%
select(c('Sample.ID','rlog_Expression','Treatment', 'Line', 'Group')) %>%
group_by(Sample.ID, Treatment, Line, Group) %>%
dplyr::summarize(mean.rlogExp = mean(rlog_Expression),
sd.rlogtExp = sd(rlog_Expression),
na.rm=TRUE)
meanEXp_Mod
meanEXp_Summary.Treatment <- meanEXp_Mod %>%
group_by(Treatment) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
meanEXp_Summary.Line <- meanEXp_Mod %>%
group_by(Line) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
meanEXp_Summary.Group <- meanEXp_Mod %>%
group_by(Group) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# Summary plot of all treatments ==================================================================================== #
# All.Treatment mean sd plot
min_p4 <- min(meanEXp_Summary.Group$mean) - max(meanEXp_Summary.Group$se)
max_p4 <- max(meanEXp_Summary.Group$mean) + max(meanEXp_Summary.Group$se)
Group.rlog.Mod <- meanEXp_Summary.Group %>%
dplyr::mutate(Treatment = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
dplyr::mutate(Line      = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Treatment, y=mean, group=Line)) + # group aesthetic connect line (Slaintiy) and color - the x axis in this case is pCO2
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(aes(linetype=Line), position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("pCO2") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
scale_y_continuous(limits=c((min_p4), (max_p4))) +
theme(text = element_text(size=15))
meanEXp_Summary.Group %>%
dplyr::mutate(Treatment = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
dplyr::mutate(Line      = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Treatment, y=mean, group=Line))
meanEXp_Summary.Group
str_extract(meanEXp_Summary.Group$Group, "\\d+(?=_[a-zA-Z]+.+$)")
library(stringr)
str_extract(meanEXp_Summary.Group$Group, "\\d+(?=_[a-zA-Z]+.+$)")
gsub("\\D", "", meanEXp_Summary.Group$Group)
meanEXp_Summary.Group$Group
gsub(".*_[a-z]|_\\d+$", "", meanEXp_Summary.Group$Group)
gsub(".*_[a-z]|_\d+$", "", meanEXp_Summary.Group$Group)
gsub(".*_[a-z]|_\\2+$", "", meanEXp_Summary.Group$Group)
gsub(".*_[a-z]|_\\d+$", "", meanEXp_Summary.Group$Group)
spl <- strsplit(sub("_", ".", x), ".", fixed = TRUE)
meanEXp_Summary.Group
meanEXp_Summary.Group$Group
Group.rlog.Mod <- meanEXp_Summary.Group %>%
dplyr::mutate(Treatment = c('fed','starved','fed','starved')) %>%
dplyr::mutate(Line = c('lola','lola','wild','wild')) %>%
dplyr::mutate(Treatment = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
dplyr::mutate(Line      = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Treatment, y=mean, group=Line)) + # group aesthetic connect line (Slaintiy) and color - the x axis in this case is pCO2
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(aes(linetype=Line), position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("pCO2") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
scale_y_continuous(limits=c((min_p4), (max_p4))) +
theme(text = element_text(size=15)) +
facet_wrap(~Salinity) # facetted by temperature
Group.rlog.Mod
Group.rlog.Mod <- meanEXp_Summary.Group %>%
dplyr::mutate(Treatment = c('fed','starved','fed','starved')) %>%
dplyr::mutate(Line = c('lola','lola','wild','wild')) %>%
dplyr::mutate(Treatment = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
dplyr::mutate(Line      = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Treatment, y=mean, group=Line)) + # group aesthetic connect line (Slaintiy) and color - the x axis in this case is pCO2
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(aes(linetype=Line), position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("pCO2") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
scale_y_continuous(limits=c((min_p4), (max_p4))) +
theme(text = element_text(size=15))
Group.rlog.Mod
print(ggarrange(single.factor.plot, Group.rlog.Mod,
plotlist = NULL,
ncol = 1,
nrow = 2,
labels = NULL))
Group.rlog.Mod <- meanEXp_Summary.Group %>%
dplyr::mutate(Treatment = c('fed','starved','fed','starved')) %>%
dplyr::mutate(Line = c('lola','lola','wild','wild')) %>%
dplyr::mutate(Treatment = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
dplyr::mutate(Line      = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Treatment, y=mean, group=Line)) + # group aesthetic connect line (Slaintiy) and color - the x axis in this case is pCO2
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(aes(linetype=Line), position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Treatment") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
scale_y_continuous(limits=c((min_p4), (max_p4))) +
theme(text = element_text(size=15))
print(ggarrange(single.factor.plot, Group.rlog.Mod,
plotlist = NULL,
ncol = 1,
nrow = 2,
labels = NULL))
for(i in 1:nrow(modcolor)) {
# vst read count date - narrow the columns - reshape and rename
Mod_geneIDs     <- day1_ModuleMembership %>%
dplyr::select(-X) %>%
dplyr::filter(moduleColor %in% modcolor[i,]) %>%
dplyr::rename("TranscriptID" = geneSymbol) %>%  na.omit()
d1_rlog_Mod      <- dds.d1_rlogtrans %>% dplyr::filter(TranscriptID %in% Mod_geneIDs[,1])
d1_rlog_Mod_MELT <- melt(d1_rlog_Mod, id=("TranscriptID")) # melt using reshape2
names(d1_rlog_Mod_MELT)[(2:3)] <-  c('Sample.ID', 'rlog_Expression') # change column names
# merge by common row values 'Sample.Name'
merged_Expdata_Mod <- merge(d1_rlog_Mod_MELT, Metadata_D1, by ='Sample.ID')
# mean Exp response table
meanEXp_Mod <- merged_Expdata_Mod %>%
select(c('Sample.ID','rlog_Expression','Treatment', 'Line', 'Group')) %>%
group_by(Sample.ID, Treatment, Line, Group) %>%
dplyr::summarize(mean.rlogExp = mean(rlog_Expression),
sd.rlogtExp = sd(rlog_Expression),
na.rm=TRUE)
# summarize datasets further by treatment period  =========================================================================================== #
# remember:this is a mean of a mean!! First we complete mean vst exp by sample id (compiling all red module genes) - next all sample IDs by the treatment period (below
# I will use these for mean SE plots
# Treatment ========================== #
meanEXp_Summary.Treatment <- meanEXp_Mod %>%
group_by(Treatment) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# Line  ========================== #
meanEXp_Summary.Line <- meanEXp_Mod %>%
group_by(Line) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# Group  ========================== #
meanEXp_Summary.Group <- meanEXp_Mod %>%
group_by(Group) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# PLOT ================================================================================ #
# The errorbars overlapped, so use position_dodge to move them horizontally
pd <- position_dodge(0.3) # move them .05 to the left and right
# Temperature mean sd plot ========================== #
min_p1 <- min(meanEXp_Summary.Treatment$mean) - max(meanEXp_Summary.Treatment$se)
max_p1 <- max(meanEXp_Summary.Treatment$mean) + max(meanEXp_Summary.Treatment$se)
Treatment.rlog.Mod <- meanEXp_Summary.Treatment %>%
dplyr::mutate(Treatment    = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
ggplot(aes(x=Treatment, y=mean, fill=Treatment)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Treatment") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("grey", "grey")) +
# scale_color_manual(values=c("#56B4E9","#E69F00")) +
# ggtitle(paste("Day 7 WGCNA", modcolor[i,], "Module VST GeneExp", sep =' ')) +
# expand_limits(y=0) +                                                    # Expand y range
scale_y_continuous(limits=c((min_p1), (max_p1))) +
theme(text = element_text(size=10), legend.position="none")
# Line mean sd plot ========================== #
min_p2 <- min(meanEXp_Summary.Line$mean) - max(meanEXp_Summary.Line$se)
max_p2 <- max(meanEXp_Summary.Line$mean) + max(meanEXp_Summary.Line$se)
Line.rlog.Mod <- meanEXp_Summary.Line %>%
dplyr::mutate(Line    = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Line, y=mean, fill=Line)) +
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Line") +
ylab(NULL) +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("grey", "grey")) +
# scale_color_manual(values=c("#56B4E9","#E69F00")) +
# ggtitle("Day 21 WGCNA red' Module VST GeneExp") +
# expand_limits(y=0) +                                                    # Expand y range
scale_y_continuous(limits=c((min_p2), (max_p2))) +
theme(text = element_text(size=10), legend.position="none")
# Assemble these together =========================================================================================== #
#library(ggpubr)
single.factor.plot <-  ggarrange(Treatment.rlog.Mod, Line.rlog.Mod,
plotlist = NULL,
ncol = 2,
nrow = 1,
labels = NULL)
library(stringr)
# Summary plot of all treatments ==================================================================================== #
# All.Treatment mean sd plot
min_p4 <- min(meanEXp_Summary.Group$mean) - max(meanEXp_Summary.Group$se)
max_p4 <- max(meanEXp_Summary.Group$mean) + max(meanEXp_Summary.Group$se)
Group.rlog.Mod <- meanEXp_Summary.Group %>%
dplyr::mutate(Treatment = c('fed','starved','fed','starved')) %>%
dplyr::mutate(Line = c('lola','lola','wild','wild')) %>%
dplyr::mutate(Treatment = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
dplyr::mutate(Line      = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Treatment, y=mean, group=Line)) + # group aesthetic connect line (Slaintiy) and color - the x axis in this case is pCO2
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(aes(linetype=Line), position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Treatment") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
scale_y_continuous(limits=c((min_p4), (max_p4))) +
theme(text = element_text(size=15))
# output   ======================================================================================================== #
pdf(paste("Output/Day1/ModuleExpression_Treatment/Day1_Exp_Module_",modcolor[i,],".pdf", sep = ''), width=9, height=8)
print(ggarrange(single.factor.plot, Group.rlog.Mod,
plotlist = NULL,
ncol = 1,
nrow = 2,
labels = NULL))
dev.off()
}
#=====================================================================================
#
# EXPLORE THE Expression of each module (for loop plots!) BY TREATMENT
#
# evidence from the heatmaps and the regression shwo strong module membership and eigenenge cor strength with lighcyan
# in response to treatment (primary specifically) and Total Antioxidant capacity
#
#=====================================================================================
# load necessary data
d0_data <- load(file="Output/Day0/Day0-NetworkConstruction_MEdata.RData")
d0_data
Day0_ModuleMembership  <- read.csv(file="Output/Day0/Day0.WGCNA_ModulMembership.csv", sep=',', header=TRUE)
Metadata_d0 # the treatment data from the dds object
Metadata_D0 # the treatment data from the dds object
dim(Metadata_D0) # 12  11
dds.d0_rlogtrans <- as.data.frame(rlogTransformation(assay(dds_d0))) # rlog transoform the expression data matrix (dds object)
dds.d0_rlogtrans <- as.data.frame(rlogTransformation(assay(dds_D0))) # rlog transoform the expression data matrix (dds object)
dim(dds.d0_rlogtrans) # 12556    12
dds.d0_rlogtrans <- dds.d0_rlogtrans[,rownames(t(dds_d0_vst))]
dds.d0_rlogtrans <- dds.d0_rlogtrans[,rownames(t(dds_D0_vst))]
dim(dds.d0_rlogtrans) # 12556    12 - we  have the correct number of samples!
dds.d0_rlogtrans <- tibble::rownames_to_column(dds.d0_rlogtrans,"TranscriptID") # rownames as first column
# write out this rlog tranformed master data (used for plotting below1)
write.csv(dds.d0_rlogtrans, file = "Output/Day0/Day0_rlog_transformed.csv")
# call the module colors
modcolor <- as.data.frame(unique(Day0_ModuleMembership$moduleColor))
names(modcolor)[1] <- "color"
for(i in 1:nrow(modcolor)) {
# vst read count date - narrow the columns - reshape and rename
Mod_geneIDs     <- Day0_ModuleMembership %>%
dplyr::select(-X) %>%
dplyr::filter(moduleColor %in% modcolor[i,]) %>%
dplyr::rename("TranscriptID" = geneSymbol) %>%  na.omit()
d0_rlog_Mod      <- dds.d0_rlogtrans %>% dplyr::filter(TranscriptID %in% Mod_geneIDs[,1])
d0_rlog_Mod_MELT <- melt(d0_rlog_Mod, id=("TranscriptID")) # melt using reshape2
names(d0_rlog_Mod_MELT)[(2:3)] <-  c('Sample.ID', 'rlog_Expression') # change column names
# merge by common row values 'Sample.Name'
merged_Expdata_Mod <- merge(d0_rlog_Mod_MELT, Metadata_d0, by ='Sample.ID')
# mean Exp response table
meanEXp_Mod <- merged_Expdata_Mod %>%
select(c('Sample.ID','rlog_Expression','Treatment', 'Line', 'Group')) %>%
group_by(Sample.ID, Treatment, Line, Group) %>%
dplyr::summarize(mean.rlogExp = mean(rlog_Expression),
sd.rlogtExp = sd(rlog_Expression),
na.rm=TRUE)
# summarize datasets further by treatment period  =========================================================================================== #
# remember:this is a mean of a mean!! First we complete mean vst exp by sample id (compiling all red module genes) - next all sample IDs by the treatment period (below
# I will use these for mean SE plots
# Treatment ========================== #
meanEXp_Summary.Treatment <- meanEXp_Mod %>%
group_by(Treatment) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# Line  ========================== #
meanEXp_Summary.Line <- meanEXp_Mod %>%
group_by(Line) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# Group  ========================== #
meanEXp_Summary.Group <- meanEXp_Mod %>%
group_by(Group) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# PLOT ================================================================================ #
# The errorbars overlapped, so use position_dodge to move them horizontally
pd <- position_dodge(0.3) # move them .05 to the left and right
# Temperature mean sd plot ========================== #
min_p1 <- min(meanEXp_Summary.Treatment$mean) - max(meanEXp_Summary.Treatment$se)
max_p1 <- max(meanEXp_Summary.Treatment$mean) + max(meanEXp_Summary.Treatment$se)
Treatment.rlog.Mod <- meanEXp_Summary.Treatment %>%
dplyr::mutate(Treatment    = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
ggplot(aes(x=Treatment, y=mean, fill=Treatment)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Treatment") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("grey", "grey")) +
# scale_color_manual(values=c("#56B4E9","#E69F00")) +
# ggtitle(paste("Day 7 WGCNA", modcolor[i,], "Module VST GeneExp", sep =' ')) +
# expand_limits(y=0) +                                                    # Expand y range
scale_y_continuous(limits=c((min_p1), (max_p1))) +
theme(text = element_text(size=10), legend.position="none")
# Line mean sd plot ========================== #
min_p2 <- min(meanEXp_Summary.Line$mean) - max(meanEXp_Summary.Line$se)
max_p2 <- max(meanEXp_Summary.Line$mean) + max(meanEXp_Summary.Line$se)
Line.rlog.Mod <- meanEXp_Summary.Line %>%
dplyr::mutate(Line    = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Line, y=mean, fill=Line)) +
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Line") +
ylab(NULL) +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("grey", "grey")) +
# scale_color_manual(values=c("#56B4E9","#E69F00")) +
# ggtitle("Day 21 WGCNA red' Module VST GeneExp") +
# expand_limits(y=0) +                                                    # Expand y range
scale_y_continuous(limits=c((min_p2), (max_p2))) +
theme(text = element_text(size=10), legend.position="none")
# Assemble these together =========================================================================================== #
#library(ggpubr)
single.factor.plot <-  ggarrange(Treatment.rlog.Mod, Line.rlog.Mod,
plotlist = NULL,
ncol = 2,
nrow = 1,
labels = NULL)
library(stringr)
# Summary plot of all treatments ==================================================================================== #
# All.Treatment mean sd plot
min_p4 <- min(meanEXp_Summary.Group$mean) - max(meanEXp_Summary.Group$se)
max_p4 <- max(meanEXp_Summary.Group$mean) + max(meanEXp_Summary.Group$se)
Group.rlog.Mod <- meanEXp_Summary.Group %>%
dplyr::mutate(Treatment = c('fed','starved','fed','starved')) %>%
dplyr::mutate(Line = c('lola','lola','wild','wild')) %>%
dplyr::mutate(Treatment = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
dplyr::mutate(Line      = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Treatment, y=mean, group=Line)) + # group aesthetic connect line (Slaintiy) and color - the x axis in this case is pCO2
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(aes(linetype=Line), position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Treatment") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
scale_y_continuous(limits=c((min_p4), (max_p4))) +
theme(text = element_text(size=15))
# output   ======================================================================================================== #
pdf(paste("Output/Day0/ModuleExpression_Treatment/Day0_Exp_Module_",modcolor[i,],".pdf", sep = ''), width=9, height=8)
print(ggarrange(single.factor.plot, Group.rlog.Mod,
plotlist = NULL,
ncol = 1,
nrow = 2,
labels = NULL))
dev.off()
}
for(i in 1:nrow(modcolor)) {
# vst read count date - narrow the columns - reshape and rename
Mod_geneIDs     <- Day0_ModuleMembership %>%
dplyr::select(-X) %>%
dplyr::filter(moduleColor %in% modcolor[i,]) %>%
dplyr::rename("TranscriptID" = geneSymbol) %>%  na.omit()
d0_rlog_Mod      <- dds.d0_rlogtrans %>% dplyr::filter(TranscriptID %in% Mod_geneIDs[,1])
d0_rlog_Mod_MELT <- melt(d0_rlog_Mod, id=("TranscriptID")) # melt using reshape2
names(d0_rlog_Mod_MELT)[(2:3)] <-  c('Sample.ID', 'rlog_Expression') # change column names
# merge by common row values 'Sample.Name'
merged_Expdata_Mod <- merge(d0_rlog_Mod_MELT, Metadata_D0, by ='Sample.ID')
# mean Exp response table
meanEXp_Mod <- merged_Expdata_Mod %>%
select(c('Sample.ID','rlog_Expression','Treatment', 'Line', 'Group')) %>%
group_by(Sample.ID, Treatment, Line, Group) %>%
dplyr::summarize(mean.rlogExp = mean(rlog_Expression),
sd.rlogtExp = sd(rlog_Expression),
na.rm=TRUE)
# summarize datasets further by treatment period  =========================================================================================== #
# remember:this is a mean of a mean!! First we complete mean vst exp by sample id (compiling all red module genes) - next all sample IDs by the treatment period (below
# I will use these for mean SE plots
# Treatment ========================== #
meanEXp_Summary.Treatment <- meanEXp_Mod %>%
group_by(Treatment) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# Line  ========================== #
meanEXp_Summary.Line <- meanEXp_Mod %>%
group_by(Line) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# Group  ========================== #
meanEXp_Summary.Group <- meanEXp_Mod %>%
group_by(Group) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# PLOT ================================================================================ #
# The errorbars overlapped, so use position_dodge to move them horizontally
pd <- position_dodge(0.3) # move them .05 to the left and right
# Temperature mean sd plot ========================== #
min_p1 <- min(meanEXp_Summary.Treatment$mean) - max(meanEXp_Summary.Treatment$se)
max_p1 <- max(meanEXp_Summary.Treatment$mean) + max(meanEXp_Summary.Treatment$se)
Treatment.rlog.Mod <- meanEXp_Summary.Treatment %>%
dplyr::mutate(Treatment    = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
ggplot(aes(x=Treatment, y=mean, fill=Treatment)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Treatment") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("grey", "grey")) +
# scale_color_manual(values=c("#56B4E9","#E69F00")) +
# ggtitle(paste("Day 7 WGCNA", modcolor[i,], "Module VST GeneExp", sep =' ')) +
# expand_limits(y=0) +                                                    # Expand y range
scale_y_continuous(limits=c((min_p1), (max_p1))) +
theme(text = element_text(size=10), legend.position="none")
# Line mean sd plot ========================== #
min_p2 <- min(meanEXp_Summary.Line$mean) - max(meanEXp_Summary.Line$se)
max_p2 <- max(meanEXp_Summary.Line$mean) + max(meanEXp_Summary.Line$se)
Line.rlog.Mod <- meanEXp_Summary.Line %>%
dplyr::mutate(Line    = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Line, y=mean, fill=Line)) +
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Line") +
ylab(NULL) +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("grey", "grey")) +
# scale_color_manual(values=c("#56B4E9","#E69F00")) +
# ggtitle("Day 21 WGCNA red' Module VST GeneExp") +
# expand_limits(y=0) +                                                    # Expand y range
scale_y_continuous(limits=c((min_p2), (max_p2))) +
theme(text = element_text(size=10), legend.position="none")
# Assemble these together =========================================================================================== #
#library(ggpubr)
single.factor.plot <-  ggarrange(Treatment.rlog.Mod, Line.rlog.Mod,
plotlist = NULL,
ncol = 2,
nrow = 1,
labels = NULL)
library(stringr)
# Summary plot of all treatments ==================================================================================== #
# All.Treatment mean sd plot
min_p4 <- min(meanEXp_Summary.Group$mean) - max(meanEXp_Summary.Group$se)
max_p4 <- max(meanEXp_Summary.Group$mean) + max(meanEXp_Summary.Group$se)
Group.rlog.Mod <- meanEXp_Summary.Group %>%
dplyr::mutate(Treatment = c('fed','starved','fed','starved')) %>%
dplyr::mutate(Line = c('lola','lola','wild','wild')) %>%
dplyr::mutate(Treatment = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
dplyr::mutate(Line      = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Treatment, y=mean, group=Line)) + # group aesthetic connect line (Slaintiy) and color - the x axis in this case is pCO2
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(aes(linetype=Line), position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Treatment") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
scale_y_continuous(limits=c((min_p4), (max_p4))) +
theme(text = element_text(size=15))
# output   ======================================================================================================== #
pdf(paste("Output/Day0/ModuleExpression_Treatment/Day0_Exp_Module_",modcolor[i,],".pdf", sep = ''), width=9, height=8)
print(ggarrange(single.factor.plot, Group.rlog.Mod,
plotlist = NULL,
ncol = 1,
nrow = 2,
labels = NULL))
dev.off()
}
