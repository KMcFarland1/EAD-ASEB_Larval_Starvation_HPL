dplyr::summarize(mean.rlogExp = mean(rlog_Expression),
sd.rlogtExp = sd(rlog_Expression),
na.rm=TRUE)
# summarize datasets further by treatment period  =========================================================================================== #
# remember:this is a mean of a mean!! First we complete mean vst exp by sample id (compiling all red module genes) - next all sample IDs by the treatment period (below
# I will use these for mean SE plots
# Treatment ========================== #
meanEXp_Summary.Treatment <- meanEXp_Mod %>%
group_by(Treatment) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# Line  ========================== #
meanEXp_Summary.Line <- meanEXp_Mod %>%
group_by(Line) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# Group  ========================== #
meanEXp_Summary.Group <- meanEXp_Mod %>%
group_by(Group) %>%
dplyr::summarize(mean = mean(mean.rlogExp),
sd = sd(sd.rlogtExp),
n = n(),
se = sd/sqrt(n))
# PLOT ================================================================================ #
# The errorbars overlapped, so use position_dodge to move them horizontally
pd <- position_dodge(0.3) # move them .05 to the left and right
# Temperature mean sd plot ========================== #
min_p1 <- min(meanEXp_Summary.Treatment$mean) - max(meanEXp_Summary.Treatment$se)
max_p1 <- max(meanEXp_Summary.Treatment$mean) + max(meanEXp_Summary.Treatment$se)
Treatment.rlog.Mod <- meanEXp_Summary.Treatment %>%
dplyr::mutate(Treatment    = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
ggplot(aes(x=Treatment, y=mean, fill=Treatment)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Treatment") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("grey", "grey")) +
# scale_color_manual(values=c("#56B4E9","#E69F00")) +
# ggtitle(paste("Day 7 WGCNA", modcolor[i,], "Module VST GeneExp", sep =' ')) +
# expand_limits(y=0) +                                                    # Expand y range
scale_y_continuous(limits=c((min_p1), (max_p1))) +
theme(text = element_text(size=10), legend.position="none")
# Line mean sd plot ========================== #
min_p2 <- min(meanEXp_Summary.Line$mean) - max(meanEXp_Summary.Line$se)
max_p2 <- max(meanEXp_Summary.Line$mean) + max(meanEXp_Summary.Line$se)
Line.rlog.Mod <- meanEXp_Summary.Line %>%
dplyr::mutate(Line    = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Line, y=mean, fill=Line)) +
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Line") +
ylab(NULL) +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("grey", "grey")) +
# scale_color_manual(values=c("#56B4E9","#E69F00")) +
# ggtitle("Day 21 WGCNA red' Module VST GeneExp") +
# expand_limits(y=0) +                                                    # Expand y range
scale_y_continuous(limits=c((min_p2), (max_p2))) +
theme(text = element_text(size=10), legend.position="none")
# Assemble these together =========================================================================================== #
#library(ggpubr)
single.factor.plot <-  ggarrange(Treatment.rlog.Mod, Line.rlog.Mod,
plotlist = NULL,
ncol = 2,
nrow = 1,
labels = NULL)
library(stringr)
# Summary plot of all treatments ==================================================================================== #
# All.Treatment mean sd plot
min_p4 <- min(meanEXp_Summary.Group$mean) - max(meanEXp_Summary.Group$se)
max_p4 <- max(meanEXp_Summary.Group$mean) + max(meanEXp_Summary.Group$se)
Group.rlog.Mod <- meanEXp_Summary.Group %>%
dplyr::mutate(Treatment = c('fed','starved','fed','starved')) %>%
dplyr::mutate(Line = c('lola','lola','wild','wild')) %>%
dplyr::mutate(Treatment = forcats::fct_relevel(Treatment, 'fed', 'starved')) %>%
dplyr::mutate(Line      = forcats::fct_relevel(Line, 'wild', 'lola')) %>%
ggplot(aes(x=Treatment, y=mean, group=Line)) + # group aesthetic connect line (Slaintiy) and color - the x axis in this case is pCO2
theme_classic() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.1, position=pd) +
geom_line(aes(linetype=Line), position=pd) +
geom_point(position=pd, size = 4, shape=21) +
xlab("Treatment") +
ylab("rlog gene expression") +                 # note the mean was first by sample ID THEN by treatment
# ylab(paste(modcolor[i,]," Module rlog Gene Expression (Mean +/- SE)", sep = ' ')) +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
scale_y_continuous(limits=c((min_p4), (max_p4))) +
theme(text = element_text(size=15))
# output   ======================================================================================================== #
pdf(paste("Output/Day0/ModuleExpression_Treatment/Day0_Exp_Module_",modcolor[i,],".pdf", sep = ''), width=9, height=8)
print(ggarrange(single.factor.plot, Group.rlog.Mod,
plotlist = NULL,
ncol = 1,
nrow = 2,
labels = NULL))
dev.off()
}
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis")
# load libraries - notes show the install command needed to install (pre installed)
library(goseq)
library(dplyr)
library(forcats)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(grDevices)
library(reshape2)
library(Rmisc)
library(ggpubr)
library(tibble)
library(hrbrthemes)
library(gridExtra)
library(tidyr)
library(zoo)
library(ComplexHeatmap)
library(circlize)
library(GSEABase)
library(data.table)
library(stringr)
path_out = 'C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Transcriptomics/DESeq2'
# Annotation file - acheived with diamond against the Cvirginica genome - Airradians genome is unannotated!
Airr_Cvirg_annotation <- read.csv(file="Data/Transcriptomics/seq_id_AirrCvirg_MERGED_master.csv",
sep = ',',
header = T) %>%
dplyr::select(c('Airradians_TranscriptID',
"blastxEval_CvirgTranscriptID",
"blastxEval_CvirgProteinID",
"blastxEval_CvirgGeneID",
"blastxEval_CvirgGOterms",
"meanLength"))
# Annotation file - acheived with diamond against the Cvirginica genome - Airradians genome is unannotated!
Airr_Cvirg_annotation <- read.csv(file="Data/Transcriptomics/seq_id_AirrCvirg_MERGED_master.csv",
sep = ',',
header = T) %>%
dplyr::select(c('Airradians_TranscriptID',
"blastxEval_CvirgTranscriptID",
"blastxEval_CvirgProteinID",
"blastxEval_CvirgGeneID",
"blastxEval_CvirgGOterms",
"meanLength"))
# load libraries - notes show the install command needed to install (pre installed)
library(goseq)
library(dplyr)
library(forcats)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(grDevices)
library(reshape2)
library(Rmisc)
library(ggpubr)
library(tibble)
library(hrbrthemes)
library(gridExtra)
library(tidyr)
library(zoo)
library(ComplexHeatmap)
library(circlize)
library(GSEABase)
library(data.table)
library(stringr)
# SET WORKING DIRECTORY
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis") # sets the working
Day0_ModuleMembership  <- read.csv(file="Output/Day0/Day0.WGCNA_ModulMembership.csv", sep=',', header=TRUE)
Day1_ModuleMembership  <- read.csv(file="Output/Day1/Day1.WGCNA_ModulMembership.csv", sep=',', header=TRUE)
# Annotation file - acheived with diamond against the Cvirginica genome - Airradians genome is unannotated!
GOEnrichment_reference <- read.csv(file="Data/Seq_Reference_Master.csv", sep=',', header=TRUE)
# GOslim
slim <- getOBOCollection("http://current.geneontology.org/ontology/subsets/goslim_generic.obo") #get GO database - # call goslim_generic.obo terms as 'slim'
GO_Day1 <- read.csv(file = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day1/Day1_GOEntrichment.csv", h = T, sep = ",")
# SET WORKING DIRECTORY
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis") # sets the working
GO_Day0 <- read.csv(file = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day0/Day0_GOEntrichment.csv", h = T, sep = ",")
GO_Day0 <- read.csv(file = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day0/Day0_GOEnrichment.csv", h = T, sep = ",")
GO_Day0 <- read.csv(file = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day0/GOEnrichment/Day0_GOEnrichment.csv", h = T, sep = ",")
library('tidytext')
GO_Day0_BP <- GO_Day0 %>%
dplyr::filter(ontology %in% ('BP')) %>%
dplyr::filter((-log10(over_represented_pvalue)) > 2) %>% #only p vlaues < 0.01
ggplot(aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term), y=-log10(over_represented_pvalue))) +
geom_segment( aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term) ,
xend=reorder_within(modColor, (-log10(over_represented_pvalue)), term),
y=1,
yend=-log10(over_represented_pvalue)),
color="grey95",
size = 3) +
geom_point(size=3,
shape = 15,
colour = "grey70") +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="bottom") +
xlab("") +
ylab("") +
ggtitle("Biological Process: Day 1") +
#geom_label(aes(x = 0.5, y = 0.5, label = paste(num_up, "DEGs"))) +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
#geom_hline(yintercept=0.25, linetype="dashed",  color = "black", size=2) +
facet_wrap(modColor ~., scales="free_y", ncol= 1, strip.position="right")
GO_Day0_BP
GO_Day0
GO_Day0_BP <- GO_Day0 %>%
dplyr::filter(ontology %in% ('BP')) %>%
dplyr::filter((-log10(over_represented_pvalue)) > 2) %>% #only p vlaues < 0.01
ggplot(aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term), y=-log10(over_represented_pvalue))) +
geom_segment( aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term) ,
xend=reorder_within(modColor, (-log10(over_represented_pvalue)), term),
y=1,
yend=-log10(over_represented_pvalue)),
color="grey95",
size = 3) +
geom_point(aes(size = numDEInCat),
shape = 15,
colour = "grey70") +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="bottom") +
xlab("") +
ylab("") +
ggtitle("Biological Process: Day 1") +
#geom_label(aes(x = 0.5, y = 0.5, label = paste(num_up, "DEGs"))) +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
#geom_hline(yintercept=0.25, linetype="dashed",  color = "black", size=2) +
facet_wrap(modColor ~., scales="free_y", ncol= 1, strip.position="right")
GO_Day0_BP
GO_Day0_BP <- GO_Day0 %>%
dplyr::filter(ontology %in% ('BP')) %>%
dplyr::filter((-log10(over_represented_pvalue)) > 2) %>% #only p vlaues < 0.01
ggplot(aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term), y=-log10(over_represented_pvalue))) +
geom_segment( aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term) ,
xend=reorder_within(modColor, (-log10(over_represented_pvalue)), term),
y=1,
yend=-log10(over_represented_pvalue)),
color="grey95",
size = 2) +
geom_point(aes(size = numDEInCat),
shape = 9,
colour = "grey70") +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="bottom") +
xlab("") +
ylab("") +
ggtitle("Biological Process: Day 1") +
#geom_label(aes(x = 0.5, y = 0.5, label = paste(num_up, "DEGs"))) +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
#geom_hline(yintercept=0.25, linetype="dashed",  color = "black", size=2) +
facet_wrap(modColor ~., scales="free_y", ncol= 1, strip.position="right")
GO_Day0_BP
GO_Day0_BP <- GO_Day0 %>%
dplyr::filter(ontology %in% ('BP')) %>%
dplyr::filter((-log10(over_represented_pvalue)) > 2) %>% #only p vlaues < 0.01
ggplot(aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term), y=-log10(over_represented_pvalue))) +
geom_segment( aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term) ,
xend=reorder_within(modColor, (-log10(over_represented_pvalue)), term),
y=1,
yend=-log10(over_represented_pvalue)),
color="grey95",
size = 2) +
geom_point(aes(size = numDEInCat, fill = modColor),
shape = 21, # filled circles
colour = "grey70") +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="bottom") +
xlab("") +
ylab("") +
ggtitle("Biological Process: Day 1") +
#geom_label(aes(x = 0.5, y = 0.5, label = paste(num_up, "DEGs"))) +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
#geom_hline(yintercept=0.25, linetype="dashed",  color = "black", size=2) +
facet_wrap(modColor ~., scales="free_y", ncol= 1, strip.position="right")
GO_Day0_BP
GO_Day0_BP <- GO_Day0 %>%
dplyr::filter(ontology %in% ('BP')) %>%
dplyr::filter((-log10(over_represented_pvalue)) > 2) %>% #only p vlaues < 0.01
ggplot(aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term), y=-log10(over_represented_pvalue))) +
geom_segment( aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term) ,
xend=reorder_within(modColor, (-log10(over_represented_pvalue)), term),
y=1,
yend=-log10(over_represented_pvalue)),
color="grey95",
size = 2) +
geom_point(aes(size = numDEInCat, fill = modColor),
shape = 21, # filled circles
colour = "grey70",
fill = c('black','blue','brown','turquoise','yellow')) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="bottom") +
xlab("") +
ylab("") +
ggtitle("Biological Process: Day 1") +
#geom_label(aes(x = 0.5, y = 0.5, label = paste(num_up, "DEGs"))) +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
#geom_hline(yintercept=0.25, linetype="dashed",  color = "black", size=2) +
facet_wrap(modColor ~., scales="free_y", ncol= 1, strip.position="right")
GO_Day0_BP
GO_Day0_BP <- GO_Day0 %>%
dplyr::filter(ontology %in% ('BP')) %>%
dplyr::filter((-log10(over_represented_pvalue)) > 2) %>% #only p vlaues < 0.01
ggplot(aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term), y=-log10(over_represented_pvalue))) +
geom_segment( aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term) ,
xend=reorder_within(modColor, (-log10(over_represented_pvalue)), term),
y=1,
yend=-log10(over_represented_pvalue)),
color="grey95",
size = 2) +
geom_point(aes(size = numDEInCat, fill = modColor),
shape = 21, # filled circles
colour = "grey70") +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="bottom") +
xlab("") +
ylab("") +
ggtitle("Biological Process: Day 1") +
#geom_label(aes(x = 0.5, y = 0.5, label = paste(num_up, "DEGs"))) +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
#geom_hline(yintercept=0.25, linetype="dashed",  color = "black", size=2) +
facet_wrap(modColor ~., scales="free_y", ncol= 1, strip.position="right")
GO_Day0_BP
GO_Day0_MF <- GO_Day0 %>%
dplyr::filter(ontology %in% ('MF')) %>%
dplyr::filter((-log10(over_represented_pvalue)) > 2) %>% #only p vlaues < 0.01
ggplot(aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term), y=-log10(over_represented_pvalue))) +
geom_segment( aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term) ,
xend=reorder_within(modColor, (-log10(over_represented_pvalue)), term),
y=1,
yend=-log10(over_represented_pvalue)),
color="grey95",
size = 3) +
geom_point(aes(size = numDEInCat, fill = modColor),
shape = 21, # filled circles
colour = "grey70") +
coord_flip() + +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="bottom") +
xlab("") +
ylab("") +
ggtitle("Molecular Function: Day 1") +
#geom_label(aes(x = 0.5, y = 0.5, label = paste(num_up, "DEGs"))) +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
#geom_hline(yintercept=0.25, linetype="dashed",  color = "black", size=2) +
facet_wrap(modColor ~., scales="free_y", ncol= 1, strip.position="right")
GO_Day0_MF <- GO_Day0 %>%
dplyr::filter(ontology %in% ('MF')) %>%
dplyr::filter((-log10(over_represented_pvalue)) > 2) %>% #only p vlaues < 0.01
ggplot(aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term), y=-log10(over_represented_pvalue))) +
geom_segment( aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term) ,
xend=reorder_within(modColor, (-log10(over_represented_pvalue)), term),
y=1,
yend=-log10(over_represented_pvalue)),
color="grey95",
size = 3) +
geom_point(aes(size = numDEInCat, fill = modColor),
shape = 21, # filled circles
colour = "grey70") +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="bottom") +
xlab("") +
ylab("") +
ggtitle("Molecular Function: Day 1") +
#geom_label(aes(x = 0.5, y = 0.5, label = paste(num_up, "DEGs"))) +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
#geom_hline(yintercept=0.25, linetype="dashed",  color = "black", size=2) +
facet_wrap(modColor ~., scales="free_y", ncol= 1, strip.position="right")
GO_Day0_MF
pdf("C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day0/GOEnrichment/BiologicalProcess_SegmentPlot.pdf", height =12, width = 8)
GO_Day1_BP
pdf("C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day0/GOEnrichment/BiologicalProcess_SegmentPlot.pdf", height =12, width = 8)
pdf("C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day0/GOEnrichment/MolecularFunction_SegmentPlot.pdf", height =12, width = 8)
GO_Day0_MF
dev.off()
pdf("C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day0/GOEnrichment/BiologicalProcess_SegmentPlot.pdf", height =12, width = 8)
GO_Day1_BP
pdf("C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day0/GOEnrichment/BiologicalProcess_SegmentPlot.pdf", height =12, width = 8)
GO_Day0_BP
dev.off()
GO_Day1 <- read.csv(file = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day1/GOEnrichment/Day1_GOEnrichment.csv", h = T, sep = ",")
GO_Day1_BP <- GO_Day1 %>%
dplyr::filter(ontology %in% ('BP')) %>%
dplyr::filter((-log10(over_represented_pvalue)) > 2) %>% #only p vlaues < 0.01
ggplot(aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term), y=-log10(over_represented_pvalue))) +
geom_segment( aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term) ,
xend=reorder_within(modColor, (-log10(over_represented_pvalue)), term),
y=1,
yend=-log10(over_represented_pvalue)),
color="grey95",
size = 3) +
geom_point(aes(size = numDEInCat, fill = modColor),
shape = 21, # filled circles
colour = "grey70") +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="bottom") +
xlab("") +
ylab("") +
ggtitle("Biological Process: Day 1") +
#geom_label(aes(x = 0.5, y = 0.5, label = paste(num_up, "DEGs"))) +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
#geom_hline(yintercept=0.25, linetype="dashed",  color = "black", size=2) +
facet_wrap(modColor ~., scales="free_y", ncol= 1, strip.position="right")
GO_Day1_MF <- GO_Day1 %>%
dplyr::filter(ontology %in% ('MF')) %>%
dplyr::filter((-log10(over_represented_pvalue)) > 2) %>% #only p vlaues < 0.01
ggplot(aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term), y=-log10(over_represented_pvalue))) +
geom_segment( aes(x=reorder_within(modColor, (-log10(over_represented_pvalue)), term) ,
xend=reorder_within(modColor, (-log10(over_represented_pvalue)), term),
y=1,
yend=-log10(over_represented_pvalue)),
color="grey95",
size = 3) +
geom_point(aes(size = numDEInCat, fill = modColor),
shape = 21, # filled circles
colour = "grey70") +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="bottom") +
xlab("") +
ylab("") +
ggtitle("Molecular Function: Day 1") +
#geom_label(aes(x = 0.5, y = 0.5, label = paste(num_up, "DEGs"))) +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
#geom_hline(yintercept=0.25, linetype="dashed",  color = "black", size=2) +
facet_wrap(modColor ~., scales="free_y", ncol= 1, strip.position="right")
GO_Day1_BP
GO_Day1_MF
pdf("C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day1/GOEnrichment/BiologicalProcess_SegmentPlot.pdf", height =12, width = 8)
GO_Day1_BP
dev.off()
pdf("C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day1/GOEnrichment/MolecularFunction_SegmentPlot.pdf", height =12, width = 8)
GO_Day1_MF
dev.off()
